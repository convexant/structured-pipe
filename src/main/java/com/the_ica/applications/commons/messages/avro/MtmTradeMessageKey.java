/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.the_ica.applications.commons.messages.avro;

import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.SchemaStore;
import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class MtmTradeMessageKey extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 4410568150955603664L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"MtmTradeMessageKey\",\"namespace\":\"com.the_ica.applications.commons.messages.avro\",\"fields\":[{\"name\":\"jobId\",\"type\":\"string\"},{\"name\":\"scenario\",\"type\":\"long\"},{\"name\":\"hopLimit\",\"type\":\"int\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<MtmTradeMessageKey> ENCODER =
      new BinaryMessageEncoder<MtmTradeMessageKey>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<MtmTradeMessageKey> DECODER =
      new BinaryMessageDecoder<MtmTradeMessageKey>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<MtmTradeMessageKey> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<MtmTradeMessageKey> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<MtmTradeMessageKey>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this MtmTradeMessageKey to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a MtmTradeMessageKey from a ByteBuffer. */
  public static MtmTradeMessageKey fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.CharSequence jobId;
  @Deprecated public long scenario;
  @Deprecated public int hopLimit;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public MtmTradeMessageKey() {}

  /**
   * All-args constructor.
   * @param jobId The new value for jobId
   * @param scenario The new value for scenario
   * @param hopLimit The new value for hopLimit
   */
  public MtmTradeMessageKey(java.lang.CharSequence jobId, java.lang.Long scenario, java.lang.Integer hopLimit) {
    this.jobId = jobId;
    this.scenario = scenario;
    this.hopLimit = hopLimit;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return jobId;
    case 1: return scenario;
    case 2: return hopLimit;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: jobId = (java.lang.CharSequence)value$; break;
    case 1: scenario = (java.lang.Long)value$; break;
    case 2: hopLimit = (java.lang.Integer)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'jobId' field.
   * @return The value of the 'jobId' field.
   */
  public java.lang.CharSequence getJobId() {
    return jobId;
  }

  /**
   * Sets the value of the 'jobId' field.
   * @param value the value to set.
   */
  public void setJobId(java.lang.CharSequence value) {
    this.jobId = value;
  }

  /**
   * Gets the value of the 'scenario' field.
   * @return The value of the 'scenario' field.
   */
  public java.lang.Long getScenario() {
    return scenario;
  }

  /**
   * Sets the value of the 'scenario' field.
   * @param value the value to set.
   */
  public void setScenario(java.lang.Long value) {
    this.scenario = value;
  }

  /**
   * Gets the value of the 'hopLimit' field.
   * @return The value of the 'hopLimit' field.
   */
  public java.lang.Integer getHopLimit() {
    return hopLimit;
  }

  /**
   * Sets the value of the 'hopLimit' field.
   * @param value the value to set.
   */
  public void setHopLimit(java.lang.Integer value) {
    this.hopLimit = value;
  }

  /**
   * Creates a new MtmTradeMessageKey RecordBuilder.
   * @return A new MtmTradeMessageKey RecordBuilder
   */
  public static com.the_ica.applications.commons.messages.avro.MtmTradeMessageKey.Builder newBuilder() {
    return new com.the_ica.applications.commons.messages.avro.MtmTradeMessageKey.Builder();
  }

  /**
   * Creates a new MtmTradeMessageKey RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new MtmTradeMessageKey RecordBuilder
   */
  public static com.the_ica.applications.commons.messages.avro.MtmTradeMessageKey.Builder newBuilder(com.the_ica.applications.commons.messages.avro.MtmTradeMessageKey.Builder other) {
    return new com.the_ica.applications.commons.messages.avro.MtmTradeMessageKey.Builder(other);
  }

  /**
   * Creates a new MtmTradeMessageKey RecordBuilder by copying an existing MtmTradeMessageKey instance.
   * @param other The existing instance to copy.
   * @return A new MtmTradeMessageKey RecordBuilder
   */
  public static com.the_ica.applications.commons.messages.avro.MtmTradeMessageKey.Builder newBuilder(com.the_ica.applications.commons.messages.avro.MtmTradeMessageKey other) {
    return new com.the_ica.applications.commons.messages.avro.MtmTradeMessageKey.Builder(other);
  }

  /**
   * RecordBuilder for MtmTradeMessageKey instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<MtmTradeMessageKey>
    implements org.apache.avro.data.RecordBuilder<MtmTradeMessageKey> {

    private java.lang.CharSequence jobId;
    private long scenario;
    private int hopLimit;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.the_ica.applications.commons.messages.avro.MtmTradeMessageKey.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.jobId)) {
        this.jobId = data().deepCopy(fields()[0].schema(), other.jobId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.scenario)) {
        this.scenario = data().deepCopy(fields()[1].schema(), other.scenario);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.hopLimit)) {
        this.hopLimit = data().deepCopy(fields()[2].schema(), other.hopLimit);
        fieldSetFlags()[2] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing MtmTradeMessageKey instance
     * @param other The existing instance to copy.
     */
    private Builder(com.the_ica.applications.commons.messages.avro.MtmTradeMessageKey other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.jobId)) {
        this.jobId = data().deepCopy(fields()[0].schema(), other.jobId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.scenario)) {
        this.scenario = data().deepCopy(fields()[1].schema(), other.scenario);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.hopLimit)) {
        this.hopLimit = data().deepCopy(fields()[2].schema(), other.hopLimit);
        fieldSetFlags()[2] = true;
      }
    }

    /**
      * Gets the value of the 'jobId' field.
      * @return The value.
      */
    public java.lang.CharSequence getJobId() {
      return jobId;
    }

    /**
      * Sets the value of the 'jobId' field.
      * @param value The value of 'jobId'.
      * @return This builder.
      */
    public com.the_ica.applications.commons.messages.avro.MtmTradeMessageKey.Builder setJobId(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.jobId = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'jobId' field has been set.
      * @return True if the 'jobId' field has been set, false otherwise.
      */
    public boolean hasJobId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'jobId' field.
      * @return This builder.
      */
    public com.the_ica.applications.commons.messages.avro.MtmTradeMessageKey.Builder clearJobId() {
      jobId = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'scenario' field.
      * @return The value.
      */
    public java.lang.Long getScenario() {
      return scenario;
    }

    /**
      * Sets the value of the 'scenario' field.
      * @param value The value of 'scenario'.
      * @return This builder.
      */
    public com.the_ica.applications.commons.messages.avro.MtmTradeMessageKey.Builder setScenario(long value) {
      validate(fields()[1], value);
      this.scenario = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'scenario' field has been set.
      * @return True if the 'scenario' field has been set, false otherwise.
      */
    public boolean hasScenario() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'scenario' field.
      * @return This builder.
      */
    public com.the_ica.applications.commons.messages.avro.MtmTradeMessageKey.Builder clearScenario() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'hopLimit' field.
      * @return The value.
      */
    public java.lang.Integer getHopLimit() {
      return hopLimit;
    }

    /**
      * Sets the value of the 'hopLimit' field.
      * @param value The value of 'hopLimit'.
      * @return This builder.
      */
    public com.the_ica.applications.commons.messages.avro.MtmTradeMessageKey.Builder setHopLimit(int value) {
      validate(fields()[2], value);
      this.hopLimit = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'hopLimit' field has been set.
      * @return True if the 'hopLimit' field has been set, false otherwise.
      */
    public boolean hasHopLimit() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'hopLimit' field.
      * @return This builder.
      */
    public com.the_ica.applications.commons.messages.avro.MtmTradeMessageKey.Builder clearHopLimit() {
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public MtmTradeMessageKey build() {
      try {
        MtmTradeMessageKey record = new MtmTradeMessageKey();
        record.jobId = fieldSetFlags()[0] ? this.jobId : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.scenario = fieldSetFlags()[1] ? this.scenario : (java.lang.Long) defaultValue(fields()[1]);
        record.hopLimit = fieldSetFlags()[2] ? this.hopLimit : (java.lang.Integer) defaultValue(fields()[2]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<MtmTradeMessageKey>
    WRITER$ = (org.apache.avro.io.DatumWriter<MtmTradeMessageKey>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<MtmTradeMessageKey>
    READER$ = (org.apache.avro.io.DatumReader<MtmTradeMessageKey>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
